package com.lti.executor.web.action;

import java.util.ArrayList;
import java.util.List;

import com.lti.executor.web.BasePage;
import com.lti.listener.impl.SimulatorTransactionProcessor;
import com.lti.service.PortfolioManager;
import com.lti.service.bo.Portfolio;
import com.lti.service.bo.PortfolioInf;
import com.lti.service.bo.Transaction;
import com.lti.system.Configuration;
import com.lti.system.ContextHolder;
import com.lti.util.StringUtil;

public class GetIDs extends BasePage {

	private String info;

	public String getInfo() {
		return info;
	}

	public void setInfo(String info) {
		this.info = info;
	}

	long[] ids=new long[]{
			11445,
			20990,
			19985,
			21754,
			21832,
			21837,
			21997,
			26010,
			26005,
			26004,
			25991,
			25990,
			25989,
			25988,
			25980,
			25978,
			25968,
			25967,
			25963,
			25962,
			25961,
			25959,
			25958,
			25957,
			25954,
			25952,
			25950,
			25949,
			25948,
			25946,
			25944,
			25942,
			25940,
			25933,
			25925,
			25917,
			25912,
			25911,
			25910,
			25908,
			25895,
			25869,
			25866,
			25860,
			25859,
			25850,
			25849,
			25847,
			25846,
			25698,
			25255,
			25252,
			25250,
			25247,
			24981,
			24978,
			24971,
			24657,
			24654,
			24653,
			24632,
			24631,
			24629,
			24614,
			24532,
			24483,
			24238,
			23979,
			23906,
			23905,
			23903,
			23893,
			23869,
			23868,
			23830,
			23800,
			23792,
			23741,
			23738,
			23727,
			23726,
			23725,
			23710,
			23709,
			23691,
			23677,
			23674,
			23629,
			23577,
			23576,
			23563,
			23562,
			23542,
			23522,
			23519,
			23506,
			23505,
			23472,
			23467,
			23462,
			23461,
			23452,
			23444,
			23442,
			23416,
			23413,
			23402,
			23397,
			23367,
			23365,
			23361,
			23359,
			23261,
			23259,
			23238,
			22634,
			22632,
			22612,
			22547,
			22546,
			22508,
			22504,
			22494,
			22485,
			22484,
			22483,
			22482,
			22477,
			22466,
			22456,
			22455,
			22451,
			22434,
			22426,
			22357,
			22347,
			22346,
			22336,
			22331,
			22319,
			22318,
			22315,
			22312,
			22310,
			22268,
			22264,
			22263,
			22257,
			22245,
			22244,
			22240,
			22222,
			22211,
			22206,
			22196,
			22189,
			22147,
			22130,
			22109,
			22098,
			22097,
			22094,
			22093,
			22073,
			22070,
			22058,
			22054,
			22048,
			22040,
			22033,
			22032,
			22022,
			22013,
			22005,
			22003,
			21975,
			21957,
			21951,
			21949,
			21943,
			21906,
			21901,
			21893,
			21876,
			21865,
			21848,
			21845,
			21835,
			21827,
			21822,
			21820,
			21819,
			21818,
			21817,
			21780,
			21753,
			21750,
			21740,
			21719,
			21699,
			21680,
			21679,
			21671,
			21665,
			21664,
			21663,
			21659,
			21658,
			21657,
			21650,
			21647,
			21646,
			21634,
			21631,
			21624,
			21605,
			21600,
			21583,
			21582,
			21581,
			21560,
			21558,
			21546,
			21545,
			21544,
			21540,
			21539,
			21532,
			21531,
			21519,
			21513,
			21473,
			21472,
			21471,
			21470,
			21468,
			21467,
			21466,
			21464,
			21460,
			21459,
			21456,
			21449,
			21448,
			21447,
			21440,
			21433,
			21428,
			21424,
			21418,
			21416,
			21339,
			21286,
			21285,
			21252,
			21199,
			21176,
			21166,
			21038,
			21033,
			21028,
			21027,
			21022,
			21020,
			21018,
			20997,
			20993,
			20986,
			20979,
			20978,
			20976,
			20944,
			20922,
			20920,
			20913,
			20909,
			20897,
			20896,
			20857,
			20817,
			20815,
			20676,
			20674,
			20610,
			20608,
			20606,
			20604,
			20596,
			20580,
			20347,
			20155,
			20037,
			20035,
			20003,
			19963,
			19951,
			19807,
			19805,
			19785,
			19783,
			19713,
			19705,
			19699,
			19689,
			19679,
			19675,
			19637,
			19635,
			19625,
			19585,
			19583,
			19575,
			19573,
			19567,
			19561,
			19557,
			19493,
			19489,
			19487,
			19417,
			19371,
			19339,
			19323,
			19135,
			19067,
			18849,
			18831,
			18799,
			18797,
			18775,
			18773,
			18769,
			18761,
			18747,
			18741,
			18717,
			18701,
			18645,
			18561,
			18519,
			18463,
			18461,
			18459,
			18401,
			18399,
			18395,
			18393,
			18375,
			18295,
			18293,
			18127,
			18125,
			18079,
			18077,
			18075,
			18065,
			18061,
			18059,
			18051,
			18035,
			18027,
			18025,
			18017,
			18009,
			17971,
			17855,
			17799,
			17681,
			17583,
			17501,
			17495,
			17489,
			17487,
			17375,
			17373,
			17295,
			17293,
			17199,
			16839,
			16725,
			16576,
			16572,
			15158,
			12864,
			12462,
			11553,
			11311,
			12464
			
	};

	@Override
	public String execute() throws Exception {
		try {
			PortfolioManager pm=ContextHolder.getPortfolioManager();
			List<Long> sids=new ArrayList<Long>();
			for(long id:ids){
					PortfolioInf pi=pm.getPortfolioInf(id, Configuration.PORTFOLIO_HOLDING_EXPECTED);
					SimulatorTransactionProcessor itp=(SimulatorTransactionProcessor) pi.getHolding().getTransactionProcessor();
					List<Transaction> trs=itp.getScheduleTransactions();
					for(int i=0;i<trs.size();i++){
						Transaction tr=trs.get(i);
						if(tr.getAssetName().toUpperCase().contains("COMMODITIES")&&tr.getOperation().toUpperCase().equals("SELL_AT_OPEN")){
							sids.add(id);
							break;
						}
					}
				
			}
			StringBuffer sb=new StringBuffer();
			for(Long id:sids){
				Portfolio p=pm.get(id);
				sb.append(id);
				sb.append(" ");
				try {
					sb.append(p.getStrategies().getAssetAllocationStrategy().getParameter().get("PlanID"));
				} catch (Exception e) {
				}
				sb.append("<br>\r\n");
			}
			info=sb.toString();
		} catch (Exception e) {
			info="<pre>"+StringUtil.getStackTraceString(e)+"</pre>";
		}
		return "info.ftl";

	}
	
	public  static void  main(String[] args) throws Exception{
		new GetIDs().execute();
	}

}
